-- lua/plugins/mason.lua
-- –≠—Ç–æ—Ç —Ñ–∞–π–ª —É–ø—Ä–∞–≤–ª—è–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π LSP —Å–µ—Ä–≤–µ—Ä–æ–≤,
-- —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä–æ–≤ –∏ –ª–∏–Ω—Ç–µ—Ä–æ–≤ —Å –ø–æ–º–æ—â—å—é Mason.

return {
	-- 1. Mason Core - –º–µ–Ω–µ–¥–∂–µ—Ä –ø–∞–∫–µ—Ç–æ–≤ LSP/DAP/Formatter/Linter
	{
		"williamboman/mason.nvim",
		cmd = "Mason", -- –ó–∞–≥—Ä—É–∂–∞—Ç—å –ø–æ –∫–æ–º–∞–Ω–¥–µ :Mason
		opts = { -- –ü–µ—Ä–µ–¥–∞–µ–º –æ–ø—Ü–∏–∏ –Ω–∞–ø—Ä—è–º—É—é –≤ setup()
			ui = {
				border = "rounded", -- –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: —Å—Ç–∏–ª—å —Ä–∞–º–∫–∏
				icons = {
					package_installed = "‚úì",
					package_pending = "‚ûú",
					package_uninstalled = "‚úó",
				},
			},
		},
		-- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Mason –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø–µ—Ä–µ–¥ –∑–∞–≤–∏—Å–∏–º—ã–º–∏ –ø–ª–∞–≥–∏–Ω–∞–º–∏
		-- lazy.nvim –æ–±—ã—á–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å —ç—Ç–∏–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∏–∂–µ
	},

	-- 2. Mason LSPConfig - –º–æ—Å—Ç –º–µ–∂–¥—É Mason –∏ nvim-lspconfig
	{
		"williamboman/mason-lspconfig.nvim",
		dependencies = {
			"williamboman/mason.nvim",
			"neovim/nvim-lspconfig", -- –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç nvim-lspconfig
			"hrsh7th/cmp-nvim-lsp", -- –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è capabilities
		},
		opts = function()
			-- –°–ø–∏—Å–æ–∫ LSP —Å–µ—Ä–≤–µ—Ä–æ–≤ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Mason'–æ–º.
			-- –û—Å–Ω–æ–≤–∞–Ω –Ω–∞ –≤–∞—à–µ–º —Å–ø–∏—Å–∫–µ + —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.
			local ensure_installed = {
				"ansiblels", -- Ansible
				"bashls", -- Bash
				"clangd", -- C/C++
				"cssls", -- CSS
				"dockerls", -- Dockerfile
				"gopls", -- Go
				"helm_ls", -- Helm
				"html", -- HTML
				"jsonls", -- JSON
				"lua_ls", -- Lua
				"marksman", -- Markdown
				"pyright", -- Python
				"rust_analyzer", -- Rust
				"taplo", -- TOML (—Ç–∞–∫–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∫ —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä/–ª–∏–Ω—Ç–µ—Ä)
				"terraformls", -- Terraform
				"tsserver", -- TypeScript/JavaScript (–æ–±—ã—á–Ω–æ –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–µ–µ denols –∏–ª–∏ rome)
				"yamlls", -- YAML
				-- "lemminx",    -- XML (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
				-- –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ –Ω—É–∂–Ω—ã–µ LSP —Å–µ—Ä–≤–µ—Ä—ã –∑–¥–µ—Å—å
			}

			return {
				ensure_installed = ensure_installed,
				-- automatic_installation = true, -- –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
			}
		end,
		config = function(_, opts)
			require("mason-lspconfig").setup(opts)

			-- --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ nvim-lspconfig ---
			-- –ü–æ–ª—É—á–∞–µ–º capabilities –æ—Ç cmp-nvim-lsp –¥–ª—è –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è
			local capabilities = require('cmp_nvim_lsp').default_capabilities()

			-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫ –∫–∞–∂–¥–æ–º—É LSP —Å–µ—Ä–≤–µ—Ä—É
			local function on_attach(client, bufnr)
				-- –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ on_attach,
				-- –Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö LSP –∫–µ–π–±–∏–Ω–¥–æ–≤
				-- vim.keymap.set('n', 'K', vim.lsp.buf.hover, { buffer = bufnr, desc = "LSP Hover" })
				-- vim.keymap.set('n', 'gd', vim.lsp.buf.definition, { buffer = bufnr, desc = "Goto Definition" })
				-- vim.keymap.set('n', 'gr', vim.lsp.buf.references, { buffer = bufnr, desc = "Goto References" })
				-- vim.keymap.set('n', '<leader>ca', vim.lsp.buf.code_action, { buffer = bufnr, desc = "Code Action" })
				-- ... –∏ —Ç.–¥. –õ—É—á—à–µ –≤—ã–Ω–µ—Å—Ç–∏ —ç—Ç–æ –≤ –≤–∞—à core.keymaps.lua –∏ –≤—ã–∑—ã–≤–∞—Ç—å –æ—Ç—Å—é–¥–∞
				-- print("LSP attached to buffer:", bufnr, "Client:", client.name)
			end

			-- –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ö—É–∫ –æ—Ç mason-lspconfig –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—ã–∑–
			æ–≤–∞
			setup
			-- –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ LSP –∏–∑ —Å–ø–∏—Å–∫–∞ ensure_installed
			local lspconfig = require("lspconfig")
			require("mason-lspconfig").setup_handlers({
				-- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—Ä–∏–º–µ–Ω—è–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
				function(server_name)
					lspconfig[server_name].setup({
						capabilities = capabilities,
						on_attach = on_attach, -- –ü—Ä–∏–º–µ–Ω—è–µ–º –æ–±—â—É—é —Ñ—É–Ω–∫—Ü–∏—é on_attach
						-- –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–æ–≤ –∑–¥–µ—Å—å, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
						-- settings = { ... }
					})
				end,

				-- –ü—Ä–∏–º–µ—Ä –∫–∞—Å—Ç–æ–º–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è lua_ls (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
				["lua_ls"] = function()
					lspconfig.lua_ls.setup({
						capabilities = capabilities,
						on_attach = on_attach,
						settings = {
							Lua = {
								diagnostics = {
									-- –£–±–∏—Ä–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö vim
									globals = { 'vim' },
								},
								workspace = {
									-- –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º LSP –æ –≤–µ—Ä—Å–∏–∏ Lua, –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–π Neovim
									checkThirdParty = false,
								},
								telemetry = { enable = false }, -- –û—Ç–∫–ª—é—á–∞–µ–º —Ç–µ–ª–µ–º–µ—Ç—Ä–∏—é
							},
						},
					})
				end,
				-- –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ –∫–∞—Å—Ç–æ–º–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
			})
			-- --- –ö–æ–Ω–µ—Ü –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ nvim-lspconfig ---
		end,
	},

	-- 3. Mason Tool Installer - –∞–≤—Ç–æ-—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä–æ–≤, –ª–∏–Ω—Ç–µ—Ä–æ–≤ –∏ —Ç.–¥.
	{
		"WhoIsSethDaniel/mason-tool-installer.nvim",
		dependencies = { "williamboman/mason.nvim" },
		opts = {
			-- –°–ø–∏—Å–æ–∫ –ù–ï-LSP –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Mason'–æ–º
			ensure_installed = {
				-- –§–æ—Ä–º–∞—Ç—Ç–µ—Ä—ã (–¥–ª—è conform.nvim):
				"stylua", -- Lua
				"black", -- Python
				"isort", -- Python (—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤)
				"goimports", -- Go (—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∏–º–ø–æ—Ä—Ç—ã)
				"prettierd", -- JS/TS/HTML/CSS/JSON/YAML/MD (–±—ã—Å—Ç—Ä—ã–π –¥–µ–º–æ–Ω)
				"shfmt", -- Shell scripts
				"taplo", -- TOML (—É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–∞–∫ LSP, –Ω–æ –¥—É–±–ª–∏—Ä—É–µ–º –¥–ª—è —è—Å–Ω–æ—Å—Ç–∏)
				"rustfmt", -- Rust (–ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–µ–µ –¥–ª—è conform, —á–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –≤ rust-analyzer)
				-- "clang-format",-- C/C++ (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ clangd –∏ —Ö–æ—Ç–∏—Ç–µ conform)

				-- –õ–∏–Ω—Ç–µ—Ä—ã (–¥–ª—è nvim-lint –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ LSP):
				"ruff", -- Python (–æ—á–µ–Ω—å –±—ã—Å—Ç—Ä—ã–π –ª–∏–Ω—Ç–µ—Ä –∏ —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä)
				"eslint_d", -- JS/TS (–±—ã—Å—Ç—Ä—ã–π –¥–µ–º–æ–Ω)
				"shellcheck", -- Shell scripts
				"tflint", -- Terraform (—É –≤–∞—Å —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)
				-- "yamllint",    -- YAML
				-- "markdownlint",-- Markdown
				-- "ansible-lint",-- Ansible
				-- "cppcheck",    -- C/C++ Linter
				-- "revive",      -- Go Linter

				-- –î—Ä—É–≥–∏–µ —É—Ç–∏–ª–∏—Ç—ã (–ø—Ä–∏–º–µ—Ä—ã):
				-- "codespell",   -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏ –≤ –∫–æ–¥–µ
				-- "jq",          -- –û–±—Ä–∞–±–æ—Ç–∫–∞ JSON –≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
			},
			-- run_on_start = true, -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å/–ø—Ä–æ–≤–µ—Ä—è—Ç—å –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∑–∞–ø—É—Å–∫–µ Neovim
			-- auto_update = false, -- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å –ø–∞–∫–µ—Ç—ã
		},
	},
}
